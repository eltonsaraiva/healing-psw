- Criar um ambiente
python -m venv venv

- ativar ambiente
venv\Scripts\activate

- instalar django
pip install django, pillow

- criar um projeto django
django-admin startproject healing .

- settings.py
LANGUAGE_CODE = 'pt-BR'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True

- criar um app
python manage.py startapp usuarios

- healing\urls.py
urlpatterns = [
    path('admin/', admin.site.urls),
    path('usuarios/', include('usuarios.urls'))
]

- usuarios\urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('cadastro/', views.cadastro, name='cadastro'),

]

- settings.py
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'usuarios',
]

- usuarios\views.py
from django.shortcuts import render
from django.http import HttpResponse
# Create your views here.
def cadastro(request):
    return render(request, 'cadastro.html')


- settings.py
import os
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

isso faz com que o django procure a pasta templates dentro da base_dir e com o
APP_DIRS: True, o django também procura a pasta templates dentro dos aplicativos.


- settings.py - Configurar os arquivos estaticos
- static_url é o url
- statisfiles_DIRS é o local(caminho) dos arquivos
- arquivos de media são os arquivos que o usuário envia para o servidor
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'templates/static'),)
STATIC_ROOT = os.path.join('static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

- dentro do base.html colocar o caminho ontem salvou o static a ser usado, dentro do <head>..</head>
    <link rel="stylesheet" href="{% static 'geral/css/base.css' %}">

- dentro ainda do base.html,
{% load static %}

- criar tabelas no banco de dados
python manage.py migrate
python manage.py makemigrations



- Configurando mensagens. Incluir no settings.py
- alert bootstrap.
from django.contrib.messages import constants

MESSAGE_TAGS = {
    constants.DEBUG: 'alert-primary',
    constants.ERROR: 'alert-danger',
    constants.SUCCESS: 'alert-success',
    constants.INFO: 'alert-info',
    constants.WARNING: 'alert-warning',
}


- No views adicionar os pacotes
from django.contrib.messages import constants
from django.contrib import add_message


- login.html, 
- views.py
from django.contrib import auth

def login_view(request):
    if request.method == 'GET':
        return render(request, 'login.html')
    elif request.method == 'POST':
        username = request.POST.get('username')
        senha = request.POST.get('senha')

        user = auth.authenticate(request, username=username, password=senha)

        if user:
            # cria uma sessão
            auth.login(request, user)
            return redirect('/pacientes/home')
        
        messages.add_message(request, constants.ERROR, 'Usuário ou senha incorretos')
        return redirect('/usuarios/login')
    

def sair(request):
    auth.logout(request)
    return redirect('/usuarios/login')



- Criar um app medico
python manage.py startapp medico

- settings.py
INSTALLED_APPS
cadastra o app medico


- criando as tabelas no db
python .\manage.py makemigrations
python manage.py migrate

- criar admin
python .\manage.py createsuperuser

- criar admin do aplicativos
from django.contrib import admin
from .models import Especialidades, DadosMedico

admin.site.register(Especialidades)
admin.site.register(DadosMedico)


- url dos static. no urls.py do core
from django.contrib import admin
from django.urls import path, include
from django.conf import settings
from django.conf.urls.static import static

urlpatterns = [
    path('admin/', admin.site.urls),
    path('usuarios/', include('usuarios.urls')),
    path('medicos/', include('medico.urls')),
] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)


- settings.ppy. Altera de True para False
USE_TZ = False


- cruar novo app
